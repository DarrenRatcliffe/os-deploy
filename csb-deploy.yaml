kind: Template
apiVersion: v1
metadata:
  name: compose-service-broker

  annotations:
    displayName: "Compose Service Broker"
    description: "Broker to present and deploy service catalog items via an instance of Atos Canopy Compose"
    tags: "broker"
objects:
- apiVersion: v1
  kind: Secret
  metadata:
    name: "${NAME}"
  stringData:
      brooklyn-password: "${BROOKLYN_PASSWORD}"
      brooklyn-username: "${BROOKLYN_USERNAME}"
      security-user-password: "${SECURITY_USER_PASSWORD}"
      security-user-name: "${SECURITY_USER_NAME}"
      brooklyn-uri: "${BROOKLYN_URI}"
      brooklyn-namespace: "${BROOKLYN_NAMESPACE}"
      brooklyn-location: "${BROOKLYN_LOCATION}"
- apiVersion: v1
  kind: Route
  metadata:
    annotations:
      template.openshift.io/expose-uri: "http://{.spec.host}{.spec.path}"
    name: "${NAME}"
  spec:
    host: "${APPLICATION_DOMAIN}"
    to:
        kind: "Service"
        name: "${NAME}"
- apiVersion: v1
  kind: ImageStream
  metadata:
    annotations:
      openshift.io/generated-by: OpenShiftNewApp
    creationTimestamp: null
    labels:
      app: "${NAME}"
    name: springboot-s2i
  spec:
    lookupPolicy:
      local: false
    tags:
    - annotations:
        openshift.io/imported-from: jorgemoralespou/springboot-s2i
      from:
        kind: DockerImage
        name: jorgemoralespou/springboot-s2i
      generation: null
      importPolicy: {}
      name: latest
      referencePolicy:
        type: ""
  status:
    dockerImageRepository: ""
- apiVersion: v1
  kind: ImageStream
  metadata:
    annotations:
      openshift.io/generated-by: OpenShiftNewApp
    creationTimestamp: null
    labels:
      app: "${NAME}"
    name: "${NAME}"
  spec:
    lookupPolicy:
      local: false
  status:
    dockerImageRepository: ""
- apiVersion: v1
  kind: BuildConfig
  metadata:
    annotations:
      openshift.io/generated-by: OpenShiftNewApp
    creationTimestamp: null
    labels:
      app: "${NAME}"
    name: "${NAME}"
  spec:
    nodeSelector: null
    output:
      to:
        kind: ImageStreamTag
        name: ${NAME}:latest
    postCommit: {}
    resources: {}
    source:
      git:
        ref: "${SOURCE_REPOSITORY_REF}"
        uri: "${SOURCE_REPOSITORY_URL}"
      type: Git
    strategy:
      sourceStrategy:
        from:
          kind: ImageStreamTag
          name: springboot-s2i:latest
      type: Source
    triggers:
    - github:
        secret: Ek7o7ltvSv58lP24LZH0
      type: GitHub
    - generic:
        secret: nwcKovQ-N0iTb5LnwGf2
      type: Generic
    - type: ConfigChange
    - imageChange: {}
      type: ImageChange
  status:
    lastVersion: 0
- apiVersion: v1
  kind: DeploymentConfig
  metadata:
    annotations:
      openshift.io/generated-by: OpenShiftNewApp
    creationTimestamp: null
    labels:
      app: "${NAME}"
    name: "${NAME}"
  spec:
    replicas: 1
    selector:
      app: "${NAME}"
      deploymentconfig: "${NAME}"
    strategy:
      resources: {}
    template:
      metadata:
        annotations:
          openshift.io/generated-by: OpenShiftNewApp
        creationTimestamp: null
        labels:
          app: "${NAME}"
          deploymentconfig: "${NAME}"
      spec:
        containers:
        - image: ${NAME}:latest
          name: "${NAME}"
          env:
            - name: "BROOKLYN_USERNAME"
              valueFrom:
                secretKeyRef:
                  key: "brooklyn-username"
                  name: "${NAME}"
            - name: "BROOKLYN_PASSWORD"
              valueFrom:
                secretKeyRef:
                  key: "brooklyn-password"
                  name: "${NAME}"
            - name: "BROOKLYN_URI"
              valueFrom:
                secretKeyRef:
                  key: "brooklyn-uri"
                  name: "${NAME}"
            - name: "SECURITY_USER_NAME"
              valueFrom:
                secretKeyRef:
                  key: "security-user-name"
                  name: "${NAME}"
            - name: "SECURITY_USER_PASSWORD"
              valueFrom:
                secretKeyRef:
                  key: "security-user-password"
                  name: "${NAME}"
            - name: "BROOKLYN_LOCATION"
              valueFrom:
                secretKeyRef:
                  key: "brooklyn-location"
                  name: "${NAME}"
            - name: "BROOKLYN_NAMESPACE"
              valueFrom:
                secretKeyRef:
                  key: "brooklyn-namespace"
                  name: "${NAME}"

            #- name: "BROOKLYN_LOCATION"
              #value: "${BROOKLYN_LOCATION}"
            #- name: "BROOKLYN_NAMESPACE"
              #value: "${BROOKLYN_NAMESPACE}"
          #livenessProbe:
            #httpGet:
              #path: "/"
              #port: 8080
              #initialDelaySeconds: 30
              #timeoutSeconds: 3
          #readinessProbe:
            #httpGet:
              #path: "/"
              #port: 8080
              #initialDelaySeconds: 3
              #timeoutSeconds: 3
          #resources:
              #limits:
                #memory: "${MEMORY_LIMIT}"
          ports:
          - containerPort: 8080
            protocol: TCP
          resources: {}
    test: false
    triggers:
    - type: ConfigChange
    - imageChangeParams:
        automatic: true
        containerNames:
        - "${NAME}"
        from:
          kind: ImageStreamTag
          name: ${NAME}:latest
      type: ImageChange
  status:
    availableReplicas: 0
    latestVersion: 0
    observedGeneration: 0
    replicas: 0
    unavailableReplicas: 0
    updatedReplicas: 0
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      openshift.io/generated-by: OpenShiftNewApp
    creationTimestamp: null
    labels:
      app: "${NAME}"
    name: "${NAME}"
  spec:
    ports:
    - name: 8080-tcp
      port: 8080
      protocol: TCP
      targetPort: 8080
    selector:
      app: "${NAME}"
      deploymentconfig: "${NAME}"
  status:
    loadBalancer: {}
parameters:
  - name: "NAME"
    description: "The name assigned to all of the frontend objects defined in this template."
    displayName: "Name"
    required: true
    value: "compose-service-broker"
  - name: "NAMESPACE"
    description: "The OpenShift Namespace where the ImageStream resides."
    displayName: "Namespace"
    #required: true
    #value: "openshift"
  - name: "MEMORY_LIMIT"
    description: "Maximum amount of memory the container can use."
    displayName: "Memory Limit"
    required: true
    value: "1024Mi"
  - name: "SOURCE_REPOSITORY_URL"
    description: "The URL of the repository with your application source code."
    displayName: "Git Repository URL"
    required: true
    value: "https://github.com/DarrenRatcliffe/brooklyn-service-broker"
  - name: "SOURCE_REPOSITORY_REF"
    description: "Set this to a branch name, tag or other ref of your repository if you are not using the default branch."
    displayName: "Git Reference"
    value: "openshift"
  - name: "CONTEXT_DIR"
    description: "Set this to the relative path to your project if it is not in the root of your repository."
    displayName: "Context Directory"
  - name: "APPLICATION_DOMAIN"
    description: "The exposed hostname that will route to the Compose service broker, if left blank a value will be defaulted."
    displayName: "Application Hostname"
    value: ""
  - name: "GITHUB_WEBHOOK_SECRET"
    description: "Github trigger secret.  A difficult to guess string encoded as part of the webhook URL.  Not encrypted."
    displayName: "GitHub Webhook Secret"
    from: "[a-zA-Z0-9]{40}"
    generate: "expression"
  - name: BROOKLYN_LOCATION
    displayName: "Compose deployment location"
    description: "The location where the broker deploys catalog services to"
    value: "AWS Ireland"
    required: true
  - name: BROOKLYN_NAMESPACE
    displayName: "Compose catalog prepend"
    description: "Will be used to prepend catalog items loaded in the service catalog to make them identifiable as being orchestrated by Compose"
    value: "Compose"
    required: true
  - name: BROOKLYN_URI
    displayName: "Compose instance URL"
    description: "The location of the Compose instance"
    value: "https://incubation-ida.compose.canopy-cloud.com"
    required: true
  - name: BROOKLYN_USERNAME
    displayName: "Compose user"
    description: "The Compose user to use"
    value: "compose@canopy-cloud.com"
    required: true
  - name: BROOKLYN_PASSWORD
    displayName: "Compose user password"
    description: "The Compose user password to use"
    value: "fEFaBmOAvWXQ1Eeqy6Cl"
    required: true
  - name: SECURITY_USER_NAME
    displayName: "Compose broker username"
    description: "The Compose broker user to use"
    value: "openshift"
    required: true
  - name: SECURITY_USER_PASSWORD
    displayName: "Compose broker user password"
    description: "The Compose broker user password to use"
    value: "0penshift"
    required: true
